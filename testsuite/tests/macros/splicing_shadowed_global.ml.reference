
# macro x : int list expr =
  << (apply (field 12 (global List!)) (function prim/1254 (-1+ prim/1254))
       [0: 1 [0: 2 [0: 3 0a]]]) >>
# macro y : int option expr = << [0: 42] >>
#       module Pervasives : sig val pred : int -> int end
#         type fake_option = Blah | Some of int
#   val l : int list = [0; 1; 2]
#         Characters 28-32:
    | Blah -> false
      ^^^^
Error: This variant pattern is expected to have type int option
       The constructor Blah does not belong to type option
# 
